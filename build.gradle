plugins {
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}


group = 'net.thepigcat76'
version = '1.0-SNAPSHOT'

java {
    archivesBaseName = 'occultic_extensions'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: 'official', version: '1.19.2'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'occultic_extensions'

            mods {
                occulticextensions {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'occultic_extensions'

            mods {
                occulticextensions {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'occultic_extensions'

            mods {
                occulticextensions {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'occulticextensions', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                occulticextensions {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name = "KliKli Dev Repsy Maven"
        url = "https://repo.repsy.io/mvn/klikli-dev/mods"
        content {
            includeGroup "com.klikli_dev"
        }
    }
    maven { url 'https://maven.blamejared.com' }
    maven {
        name = "JEI"
        url = 'https://maven.blamejared.com/'
        content {
            includeGroup "mezz.jei"
        }
    }
    maven {
        name = "Curios Maven"
        url = "https://maven.theillusivec4.top/"
        content {
            includeGroup "top.theillusivec4.curios"
        }
    }
    maven {
        name = "Geckolib Maven"
        url = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/"
        content {
            includeGroup "software.bernie.geckolib"
        }
    }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    flatDir {
        dirs 'runtime-mods'
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.2.4'
    implementation fg.deobf("curse.maven:occultism-361026:4375414")

    //Jei
    compileOnly fg.deobf("mezz.jei:jei-${jei_mc_version}-common-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-${jei_mc_version}-forge-api:${jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${jei_mc_version}-forge:${jei_version}")

    //curios
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_mc_version}-${curios_version}:api")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_mc_version}-${curios_version}")

    //geckolib
    implementation fg.deobf("software.bernie.geckolib:geckolib-forge-${geckolib_mc_version}:${geckolib_version}")

    //smartbrainlib
    implementation fg.deobf("curse.maven:smartbrainlib-661293:${smartbrainlib_file_id}-sources-${smartbrainlib_src_file_id}")

    //modonomicon
    implementation fg.deobf("com.klikli_dev:modonomicon:${modonomicon_mc_version}-${modonomicon_version}") //we build against full jar because we NEED IT ALL

    //theurgy
    compileOnly fg.deobf("com.klikli_dev:theurgy:${theurgy_mc_version}-${theurgy_version}")
    runtimeOnly fg.deobf("com.klikli_dev:theurgy:${theurgy_mc_version}-${theurgy_version}")

    //runtime only helper mods for dev env, placed in ./runtime-mods, example: Hwyla-forge-1.10.11-B78_1.16.2.jar
    //runtimeOnly fg.deobf("ignoredvalue:Hwyla:forge-1.10.11-B78_1.16.2")
}


jar {
    manifest {
        attributes([
                "Specification-Title"     : "occulticextensions",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}


tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
